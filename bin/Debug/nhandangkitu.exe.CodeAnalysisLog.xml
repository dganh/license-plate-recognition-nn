<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="nhandangkitu">
   <Messages>
    <Message Id="nhandangkitu" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'nhandangkitu' in namespace name 'nhandangkitu' by changing it to 'Nhandangkitu'.</Issue>
    </Message>
    <Message Id="nhandangkitu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nhandangkitu' in namespace name 'nhandangkitu'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\PROJECT\Project1\NDBS\bin\Debug\nhandangkitu.exe">
   <Modules>
    <Module Name="nhandangkitu.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'nhandangkitu.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="nhandangkitu" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'nhandangkitu' in assembly name 'nhandangkitu.exe' by changing it to 'Nhandangkitu'.</Issue>
      </Message>
      <Message Id="nhandangkitu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nhandangkitu' in assembly name 'nhandangkitu.exe'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'nhandangkitu.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'nhandangkitu.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="nhandangkitu">
       <Types>
        <Type Name="AboutBox1" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="15">Method 'AboutBox1.AboutBox1()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "About ".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="15">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AboutBox1.AboutBox1()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyCompany" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="88">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyCompany' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyCopyright" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="75">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyCopyright' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="49">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyDescription' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="62">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyProduct' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyTitle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="24">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyTitle' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_AssemblyTitle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="29">Replace the call to 'string.operator !=(string, string)' in 'AboutBox1.AssemblyTitle.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#AssemblyVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.cs" Line="41">The 'this' parameter (or 'Me' in Visual Basic) of 'AboutBox1.AssemblyVersion' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="72">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="150">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "AboutBox1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="119">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "BKHN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nhận dạng biển số xe máy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="131">Method 'AboutBox1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SV K52".</Issue>
            </Message>
            <Message Id="Anh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Anh' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Bính" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Bính' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Diện" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Diện' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Dương" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Dương' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Huy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Huy' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Nguyễn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Nguyễn' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Nhận" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'Nhận' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
            <Message Id="Quang" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Quang' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Trần" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Trần' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Việt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Việt' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Văn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Văn' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Vũ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Vũ' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="Xuân" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Xuân' in the literal '"1. Dương Việt Anh\n2. Nguyễn Văn Bính\n3. Vũ Xuân Diện\n4. Trần Quang Huy\n5.\n\n..."'.</Issue>
            </Message>
            <Message Id="biển" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'biển' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
            <Message Id="dạng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'dạng' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
            <Message Id="máy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'máy' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
            <Message Id="số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'số' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
            <Message Id="xe" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="AboutBox1.Designer.cs" Line="62">Correct the spelling of the unrecognized token 'xe' in the literal '"Nhận dạng biển số xe máy"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="catbienso" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#bm" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.bm' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bmBienSo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.bmBienSo' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CatDoc(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="307">'bm', a parameter declared in 'catbienso.CatDoc(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="h" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="307">'h', a variable declared in 'catbienso.CatDoc(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="w" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="307">'w', a variable declared in 'catbienso.CatDoc(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CatNgang(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="202">'bm', a parameter declared in 'catbienso.CatNgang(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutAnh(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="187">'catbienso.CutAnh(Bitmap, int, int, int, int)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="183">'bm', a parameter declared in 'catbienso.CutAnh(Bitmap, int, int, int, int)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Diemcutxy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.Diemcutxy' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#free" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.free' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'catbienso.free' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.h1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Histogram(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="83">'catbienso.Histogram(Bitmap)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="97">In method 'catbienso.Histogram(Bitmap)', object 'bmHis' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bmHis' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="83">'bm', a parameter declared in 'catbienso.Histogram(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#k" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.k' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MatrixImage(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="29">The 'this' parameter (or 'Me' in Visual Basic) of 'catbienso.MatrixImage(Bitmap)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="32">'catbienso.MatrixImage(Bitmap)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="29">'catbienso.MatrixImage(Bitmap)' returns a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="29">'bm', a parameter declared in 'catbienso.MatrixImage(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MatrixToImage(System.Int32[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="56">In method 'catbienso.MatrixToImage(int[,])', object 'bmOut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bmOut' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="52">The 'this' parameter (or 'Me' in Visual Basic) of 'catbienso.MatrixToImage(int[,])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="52">'m' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NuaDuoi" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.NuaDuoi' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NuaTren" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.NuaTren' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sovung" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.sovung' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VeHistogramX(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="265">'catbienso.VeHistogramX(Bitmap)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="293">'catbienso.VeHistogramX(Bitmap)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="265">'bm', a parameter declared in 'catbienso.VeHistogramX(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="h" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="265">'h', a variable declared in 'catbienso.VeHistogramX(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="w" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="265">'w', a variable declared in 'catbienso.VeHistogramX(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VeHistogramY(System.Drawing.Bitmap)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="123">'catbienso.VeHistogramY(Bitmap)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="161">In method 'catbienso.VeHistogramY(Bitmap)', object 'bmHis' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bmHis' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="151">'catbienso.VeHistogramY(Bitmap)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="bm" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="catbienso.cs" Line="123">'bm', a parameter declared in 'catbienso.VeHistogramY(Bitmap)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vung" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.vung' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#w1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'catbienso.w1' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContrastForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="52">Method 'ContrastForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Adjust".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="87">Method 'ContrastForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Biển số".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="112">Method 'ContrastForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ContrastForm".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="96">Method 'ContrastForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="75">Method 'ContrastForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Toàn Ảnh".</Issue>
            </Message>
            <Message Id="Biển" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="87">Correct the spelling of the unrecognized token 'Biển' in the literal '"Biển số"'.</Issue>
            </Message>
            <Message Id="ContrastForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="112">Correct the spelling of the unrecognized token 'ContrastForm' in the literal '"ContrastForm"'.</Issue>
            </Message>
            <Message Id="Toàn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="75">Correct the spelling of the unrecognized token 'Toàn' in the literal '"Toàn Ảnh"'.</Issue>
            </Message>
            <Message Id="số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="87">Correct the spelling of the unrecognized token 'số' in the literal '"Biển số"'.</Issue>
            </Message>
            <Message Id="Ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ContrastForm.Designer.cs" Line="75">Correct the spelling of the unrecognized token 'Ảnh' in the literal '"Toàn Ảnh"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#plate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ContrastForm.plate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#result1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ContrastForm.result1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#result2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ContrastForm.result2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#view" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ContrastForm.view' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExtractCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'ExtractCharacter' because it creates members of the following IDisposable types: 'Bitmap'. If 'ExtractCharacter' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#bm" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.bm' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bm1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.bm1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutAnh(System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="208">In method 'ExtractCharacter.CutAnh(int, int, int, int)', object 'bmCut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bmCut' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="179">'ExtractCharacter.CutAnh(int, int, int, int)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'ExtractCharacter.CutAnh(int, int, int, int)'&#xD;&#xA;   -&gt;'ExtractCharacter.CutAnh(int, int, int, int)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="179">'ExtractCharacter.CutAnh(int, int, int, int)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'ExtractCharacter.CutAnh(int, int, int, int)'&#xD;&#xA;   -&gt;'ExtractCharacter.CutAnh(int, int, int, int)'</Issue>
            </Message>
            <Message Id="Anh" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="179">Correct the spelling of 'Anh' in member name 'ExtractCharacter.CutAnh(int, int, int, int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="182">'ExtractCharacter.CutAnh(int, int, int, int)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="185">'ExtractCharacter.CutAnh(int, int, int, int)' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="250">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg1()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="256">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg2()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg3()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="262">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg3()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg4()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="268">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg4()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg5()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="274">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg5()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg6()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="280">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg6()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg7()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="286">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg7()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CutImg8()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="292">Correct the spelling of 'Img' in member name 'ExtractCharacter.CutImg8()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Diemcutxy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.Diemcutxy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Diemcutxy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Diemcutxy' in member name 'ExtractCharacter.Diemcutxy' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Duyet()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Duyet" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="54">Correct the spelling of 'Duyet' in member name 'ExtractCharacter.Duyet()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#free" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.free' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ExtractCharacter.free' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAngle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="235">Change 'ExtractCharacter.GetAngle()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.h' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'ExtractCharacter.h'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#k" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.k' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="k" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'ExtractCharacter.k'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MatrixImage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="28">'ExtractCharacter.MatrixImage()' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'ExtractCharacter.MatrixImage()'&#xD;&#xA;   -&gt;'ExtractCharacter.MatrixImage()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="28">'ExtractCharacter.MatrixImage()' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'ExtractCharacter.MatrixImage()'&#xD;&#xA;   -&gt;'ExtractCharacter.MatrixImage()'</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="32">'ExtractCharacter.MatrixImage()' uses a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="28">'ExtractCharacter.MatrixImage()' returns a multidimensional array of 'int[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NuaDuoi" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.NuaDuoi' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Duoi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Duoi' in member name 'ExtractCharacter.NuaDuoi' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Nua" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nua' in member name 'ExtractCharacter.NuaDuoi' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NuaTren" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.NuaTren' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Nua" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nua' in member name 'ExtractCharacter.NuaTren' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Tren" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tren' in member name 'ExtractCharacter.NuaTren' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sovung" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.sovung' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sovung" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sovung' in member name 'ExtractCharacter.sovung' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestVung()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Vung" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="82">Correct the spelling of 'Vung' in member name 'ExtractCharacter.TestVung()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#visit(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="visit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="71">Correct the casing of 'visit' in member name 'ExtractCharacter.visit(int, int)' by changing it to 'Visit'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="71">In method 'ExtractCharacter.visit(int, int)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="ExtractCharacter.cs" Line="71">In method 'ExtractCharacter.visit(int, int)', consider providing a more meaningful name than parameter name 'j'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vung" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.vung' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="vung" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'vung' in member name 'ExtractCharacter.vung' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#w" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExtractCharacter.w' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'ExtractCharacter.w'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="70">'Form1.button1_Click(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="338">In method 'Form1.buttonItem1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem15_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Method 'Form1.buttonItem15_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Chất lượng ảnh kém".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Method 'Form1.buttonItem15_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Ảnh biển số xe= NULL".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Modify 'Form1.buttonItem15_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Chất" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Correct the spelling of the unrecognized token 'Chất' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="biển" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Correct the spelling of the unrecognized token 'biển' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="kém" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Correct the spelling of the unrecognized token 'kém' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="lượng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Correct the spelling of the unrecognized token 'lượng' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Correct the spelling of the unrecognized token 'số' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="xe" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Correct the spelling of the unrecognized token 'xe' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="Ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Correct the spelling of the unrecognized token 'Ảnh' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Correct the spelling of the unrecognized token 'ảnh' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="232">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.buttonItem15_Click(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="232">Change 'Form1.buttonItem15_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="236">Change 'Form1.buttonItem15_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="239">Change 'Form1.buttonItem15_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem19_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Method 'Form1.buttonItem19_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Chất lượng ảnh kém".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Method 'Form1.buttonItem19_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Ảnh biển số xe= NULL".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Modify 'Form1.buttonItem19_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Chất" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Correct the spelling of the unrecognized token 'Chất' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="biển" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Correct the spelling of the unrecognized token 'biển' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="kém" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Correct the spelling of the unrecognized token 'kém' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="lượng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Correct the spelling of the unrecognized token 'lượng' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message Id="số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Correct the spelling of the unrecognized token 'số' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="xe" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Correct the spelling of the unrecognized token 'xe' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="Ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Correct the spelling of the unrecognized token 'Ảnh' in the literal '"Ảnh biển số xe= NULL"'.</Issue>
            </Message>
            <Message Id="ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Correct the spelling of the unrecognized token 'ảnh' in the literal '"Chất lượng ảnh kém"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="210">Change 'Form1.buttonItem19_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="212">Change 'Form1.buttonItem19_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem26_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="180">In method 'Form1.buttonItem26_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem36_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="259">In method 'Form1.buttonItem36_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="270">Method 'Form1.buttonItem36_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "error!".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="270">Change 'Form1.buttonItem36_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonItem6_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="278">In method 'Form1.buttonItem6_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'a' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonX1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Method 'Form1.buttonX1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Chưa Kết Nối Camera..".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Modify 'Form1.buttonX1_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Chưa" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Correct the spelling of the unrecognized token 'Chưa' in the literal '"Chưa Kết Nối Camera.."'.</Issue>
            </Message>
            <Message Id="Kết" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Correct the spelling of the unrecognized token 'Kết' in the literal '"Chưa Kết Nối Camera.."'.</Issue>
            </Message>
            <Message Id="Nối" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Correct the spelling of the unrecognized token 'Nối' in the literal '"Chưa Kết Nối Camera.."'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="327">Change 'Form1.buttonX1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonX2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="126">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="115">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "*".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="114">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="93">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="104">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="117">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="128">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="139">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="150">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="161">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="172">Method 'Form1.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="93">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="104">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="117">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="128">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="139">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="150">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="161">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="172">Modify 'Form1.buttonX2_Click(object, EventArgs)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="charImg" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="15">'Form1' contains field 'Form1.charImg' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'Form1' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="plateImg" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="15">'Form1' contains field 'Form1.plateImg' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'Form1' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="viewImg" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="15">'Form1' contains field 'Form1.viewImg' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'Form1' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="DevComponents.DotNetBar.BaseItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="427">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "                                                                            ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="512">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "                                                                            ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="862">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "                                                                    DATE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="493">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " HUẤN LUYỆN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="857">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " IN HÓA ĐƠN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="480">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " LOAD DATA".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="606">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " LỌC NHIỄU".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="656">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " NHẬN DẠNG BIỂN SỐ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="833">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " THÔNG TIN ĐK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="593">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " TƯƠNG PHẢN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="506">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " VIEW NN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="845">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ĐĂNG KÍ MỚI".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="899">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;1. Short News 5-7.rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="904">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;2. Prospect Email.rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="909">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;3. Customer Email.rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="914">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;4. example.rtf".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="825">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Close".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="762">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;File".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="808">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Open...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="816">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Save picture".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="748">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ABOUT".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="712">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CÂN ẢNH".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="741">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CẤU HÌNH".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="943">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "E&amp;xit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="935">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Opt&amp;ions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="894">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Recent Documents".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="733">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "THAO TÁC ẢNH ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="725">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TRÍCH KÍ TỰ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="961">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "buttonItem26".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="954">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ribbonTabItem1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="949">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'BaseItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ribbonTabItem2".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="337">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " NHẬN DẠNG BIỂN SỐ XE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="690">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "BIỂN SỐ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="392">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CAMERA".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="1007">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CAMERA".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="1040">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CAPTURE".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="282">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "KÍ TỰ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="463">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "NEURAL NETWORK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="634">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TOÀN CẢNH".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="304">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Text".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.Designer.cs" Line="571">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "XỬ LÝ CHUNG".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#load_image()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="48">In method 'Form1.load_image()', call System.IDisposable.Dispose on object 'od' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="image" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="45">Correct the casing of 'image' in member name 'Form1.load_image()' by changing it to 'Image'.</Issue>
            </Message>
            <Message Id="load" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="45">Correct the casing of 'load' in member name 'Form1.load_image()' by changing it to 'Load'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="45">Remove the underscores from member name 'Form1.load_image()'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="Form1.cs" Line="52">Replace the call to 'string.operator ==(string, string)' in 'Form1.load_image()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#plateImg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Form1.plateImg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Img' in member name 'Form1.plateImg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NeuralNetwork" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'NeuralNetwork' because it creates members of the following IDisposable types: 'StreamReader', 'StreamWriter'. If 'NeuralNetwork' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ascii_to_character()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ascii" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="404">Correct the casing of 'ascii' in member name 'NeuralNetwork.ascii_to_character()' by changing it to 'Ascii'.</Issue>
            </Message>
            <Message Id="character" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="404">Correct the casing of 'character' in member name 'NeuralNetwork.ascii_to_character()' by changing it to 'Character'.</Issue>
            </Message>
            <Message Id="to" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="404">Correct the casing of 'to' in member name 'NeuralNetwork.ascii_to_character()' by changing it to 'To'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="404">Remove the underscores from member name 'NeuralNetwork.ascii_to_character()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#binary_to_decimal()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="binary" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="414">Correct the casing of 'binary' in member name 'NeuralNetwork.binary_to_decimal()' by changing it to 'Binary'.</Issue>
            </Message>
            <Message Id="decimal" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="414">Correct the casing of 'decimal' in member name 'NeuralNetwork.binary_to_decimal()' by changing it to 'Decimal'.</Issue>
            </Message>
            <Message Id="to" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="414">Correct the casing of 'to' in member name 'NeuralNetwork.binary_to_decimal()' by changing it to 'To'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="414">Remove the underscores from member name 'NeuralNetwork.binary_to_decimal()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_errors()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="264">Correct the casing of 'calculate' in member name 'NeuralNetwork.calculate_errors()' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="errors" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="264">Correct the casing of 'errors' in member name 'NeuralNetwork.calculate_errors()' by changing it to 'Errors'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="264">Remove the underscores from member name 'NeuralNetwork.calculate_errors()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_outputs()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="228">Correct the casing of 'calculate' in member name 'NeuralNetwork.calculate_outputs()' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="outputs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="228">Correct the casing of 'outputs' in member name 'NeuralNetwork.calculate_outputs()' by changing it to 'Outputs'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="228">Remove the underscores from member name 'NeuralNetwork.calculate_outputs()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_weights()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="287">Correct the casing of 'calculate' in member name 'NeuralNetwork.calculate_weights()' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="weights" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="287">Correct the casing of 'weights' in member name 'NeuralNetwork.calculate_weights()' by changing it to 'Weights'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="287">Remove the underscores from member name 'NeuralNetwork.calculate_weights()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#current_input" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.current_input' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#character_to_ascii(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ascii" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="385">Correct the casing of 'ascii' in member name 'NeuralNetwork.character_to_ascii(string)' by changing it to 'Ascii'.</Issue>
            </Message>
            <Message Id="character" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="385">Correct the casing of 'character' in member name 'NeuralNetwork.character_to_ascii(string)' by changing it to 'Character'.</Issue>
            </Message>
            <Message Id="to" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="385">Correct the casing of 'to' in member name 'NeuralNetwork.character_to_ascii(string)' by changing it to 'To'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="385">Remove the underscores from member name 'NeuralNetwork.character_to_ascii(string)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="386">In externally visible method 'NeuralNetwork.character_to_ascii(string)', validate parameter 'character' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#character_trainer_set_file_path" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.character_trainer_set_file_path' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#desired_output" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.desired_output' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#desired_output_bit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.desired_output_bit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#desired_output_set" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.desired_output_set' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'NeuralNetwork.desired_output_set' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#epochs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.epochs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'NeuralNetwork.error' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#F" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.F' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="F" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'NeuralNetwork.F'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#form_desired_output_set()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desired" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="112">Correct the casing of 'desired' in member name 'NeuralNetwork.form_desired_output_set()' by changing it to 'Desired'.</Issue>
            </Message>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="112">Correct the casing of 'form' in member name 'NeuralNetwork.form_desired_output_set()' by changing it to 'Form'.</Issue>
            </Message>
            <Message Id="output" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="112">Correct the casing of 'output' in member name 'NeuralNetwork.form_desired_output_set()' by changing it to 'Output'.</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="112">Correct the casing of 'set' in member name 'NeuralNetwork.form_desired_output_set()' by changing it to 'Set'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="112">Remove the underscores from member name 'NeuralNetwork.form_desired_output_set()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#form_input_set()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="81">In method 'NeuralNetwork.form_input_set()', call System.IDisposable.Dispose on object 'setsImg' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="85">Method 'NeuralNetwork.form_input_set()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "\\, .bmp".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="84">Modify 'NeuralNetwork.form_input_set()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="74">Correct the casing of 'form' in member name 'NeuralNetwork.form_input_set()' by changing it to 'Form'.</Issue>
            </Message>
            <Message Id="input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="74">Correct the casing of 'input' in member name 'NeuralNetwork.form_input_set()' by changing it to 'Input'.</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="74">Correct the casing of 'set' in member name 'NeuralNetwork.form_input_set()' by changing it to 'Set'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="74">Remove the underscores from member name 'NeuralNetwork.form_input_set()'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="78">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.form_input_set()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="85">Change 'NeuralNetwork.form_input_set()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#form_network()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="60">Correct the casing of 'form' in member name 'NeuralNetwork.form_network()' by changing it to 'Form'.</Issue>
            </Message>
            <Message Id="network" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="60">Correct the casing of 'network' in member name 'NeuralNetwork.form_network()' by changing it to 'Network'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="60">Remove the underscores from member name 'NeuralNetwork.form_network()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_average_error()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="average" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="278">Correct the casing of 'average' in member name 'NeuralNetwork.get_average_error()' by changing it to 'Average'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="278">Correct the casing of 'error' in member name 'NeuralNetwork.get_average_error()' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="278">Correct the casing of 'get' in member name 'NeuralNetwork.get_average_error()' by changing it to 'Get'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="278">Remove the underscores from member name 'NeuralNetwork.get_average_error()'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="278">Change 'NeuralNetwork.get_average_error()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_desired_outputs(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="desired" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">Correct the casing of 'desired' in member name 'NeuralNetwork.get_desired_outputs(int)' by changing it to 'Desired'.</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">Correct the casing of 'get' in member name 'NeuralNetwork.get_desired_outputs(int)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="number" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">In member 'NeuralNetwork.get_desired_outputs(int)', correct the casing of 'number' in parameter name 'set_number' by changing it to 'Number'.</Issue>
            </Message>
            <Message Id="outputs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">Correct the casing of 'outputs' in member name 'NeuralNetwork.get_desired_outputs(int)' by changing it to 'Outputs'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">Remove the underscores from member name 'NeuralNetwork.get_desired_outputs(int)'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="150">In member 'NeuralNetwork.get_desired_outputs(int)', remove the underscores from parameter name 'set_number'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_input()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="126">Correct the casing of 'get' in member name 'NeuralNetwork.get_input()' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="input" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="126">Correct the casing of 'input' in member name 'NeuralNetwork.get_input()' by changing it to 'Input'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="126">Remove the underscores from member name 'NeuralNetwork.get_input()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#get_inputs(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="121">Correct the casing of 'get' in member name 'NeuralNetwork.get_inputs(int)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="inputs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="121">Correct the casing of 'inputs' in member name 'NeuralNetwork.get_inputs(int)' by changing it to 'Inputs'.</Issue>
            </Message>
            <Message Id="number" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="121">In member 'NeuralNetwork.get_inputs(int)', correct the casing of 'number' in parameter name 'set_number' by changing it to 'Number'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="121">Remove the underscores from member name 'NeuralNetwork.get_inputs(int)'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="121">In member 'NeuralNetwork.get_inputs(int)', remove the underscores from parameter name 'set_number'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#initialize_weights()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="initialize" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="67">Correct the casing of 'initialize' in member name 'NeuralNetwork.initialize_weights()' by changing it to 'Initialize'.</Issue>
            </Message>
            <Message Id="weights" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="67">Correct the casing of 'weights' in member name 'NeuralNetwork.initialize_weights()' by changing it to 'Weights'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="67">Remove the underscores from member name 'NeuralNetwork.initialize_weights()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#input_set" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.input_set' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'NeuralNetwork.input_set' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#layers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.layers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#learning_rate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.learning_rate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#load_character_trainer_set(System.Windows.Forms.OpenFileDialog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Consider changing the type of parameter 'open' in 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' from 'OpenFileDialog' to its base type 'FileDialog'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="158">Method 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Character Trainer Set (*.txt)|*.txt".</Issue>
            </Message>
            <Message Id="character" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Correct the casing of 'character' in member name 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' by changing it to 'Character'.</Issue>
            </Message>
            <Message Id="load" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Correct the casing of 'load' in member name 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' by changing it to 'Load'.</Issue>
            </Message>
            <Message Id="set" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Correct the casing of 'set' in member name 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="trainer" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Correct the casing of 'trainer' in member name 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' by changing it to 'Trainer'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="156">Remove the underscores from member name 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="164">Change 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="158">In externally visible method 'NeuralNetwork.load_character_trainer_set(OpenFileDialog)', validate parameter 'open' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#load_network()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="load" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="356">Correct the casing of 'load' in member name 'NeuralNetwork.load_network()' by changing it to 'Load'.</Issue>
            </Message>
            <Message Id="network" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="356">Correct the casing of 'network' in member name 'NeuralNetwork.load_network()' by changing it to 'Network'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="356">Remove the underscores from member name 'NeuralNetwork.load_network()'.</Issue>
            </Message>
            <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="376">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network()' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="371">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="371">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="371">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#load_network(System.Windows.Forms.OpenFileDialog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="324">Consider changing the type of parameter 'open' in 'NeuralNetwork.load_network(OpenFileDialog)' from 'OpenFileDialog' to its base type 'FileDialog'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="326">Method 'NeuralNetwork.load_network(OpenFileDialog)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Neural Network Files (*.net)|*.net".</Issue>
            </Message>
            <Message Id="load" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="324">Correct the casing of 'load' in member name 'NeuralNetwork.load_network(OpenFileDialog)' by changing it to 'Load'.</Issue>
            </Message>
            <Message Id="network" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="324">Correct the casing of 'network' in member name 'NeuralNetwork.load_network(OpenFileDialog)' by changing it to 'Network'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="324">Remove the underscores from member name 'NeuralNetwork.load_network(OpenFileDialog)'.</Issue>
            </Message>
            <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="349">Because the behavior of 'Convert.ChangeType(object, Type)' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network(OpenFileDialog)' with a call to 'Convert.ChangeType(object, Type, IFormatProvider)'. If the result of 'Convert.ChangeType(object, Type, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="344">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network(OpenFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="344">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network(OpenFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="344">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.load_network(OpenFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="333">Replace the call to 'string.operator !=(string, string)' in 'NeuralNetwork.load_network(OpenFileDialog)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="326">In externally visible method 'NeuralNetwork.load_network(OpenFileDialog)', validate parameter 'open' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#node_output" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.node_output' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'NeuralNetwork.node_output' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#number_of_input_sets" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.number_of_input_sets' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#numberPattern" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.numberPattern' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#output_bit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.output_bit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#output_string" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.output_string' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#recognization()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="recognization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="218">Correct the casing of 'recognization' in member name 'NeuralNetwork.recognization()' by changing it to 'Recognization'.</Issue>
            </Message>
            <Message Id="recognization" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="218">Correct the spelling of 'recognization' in member name 'NeuralNetwork.recognization()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#save_network(System.Windows.Forms.SaveFileDialog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="296">Consider changing the type of parameter 'save' in 'NeuralNetwork.save_network(SaveFileDialog)' from 'SaveFileDialog' to its base type 'FileDialog'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="297">Method 'NeuralNetwork.save_network(SaveFileDialog)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Artificial Neural Network Files (*.net)|*.net".</Issue>
            </Message>
            <Message Id="network" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="296">Correct the casing of 'network' in member name 'NeuralNetwork.save_network(SaveFileDialog)' by changing it to 'Network'.</Issue>
            </Message>
            <Message Id="save" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="296">Correct the casing of 'save' in member name 'NeuralNetwork.save_network(SaveFileDialog)' by changing it to 'Save'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="296">Remove the underscores from member name 'NeuralNetwork.save_network(SaveFileDialog)'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="304">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="305">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="308">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="315">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="315">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="315">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="306">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="307">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="309">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="300">Replace the call to 'string.operator !=(string, string)' in 'NeuralNetwork.save_network(SaveFileDialog)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="297">In externally visible method 'NeuralNetwork.save_network(SaveFileDialog)', validate parameter 'save' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sigmoid(System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="net" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="247">In member 'NeuralNetwork.sigmoid(float)', correct the casing of 'net' in parameter name 'f_net' by changing it to 'Net'.</Issue>
            </Message>
            <Message Id="sigmoid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="247">Correct the casing of 'sigmoid' in member name 'NeuralNetwork.sigmoid(float)' by changing it to 'Sigmoid'.</Issue>
            </Message>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="247">In method 'NeuralNetwork.sigmoid(float)', correct the spelling of 'f' in parameter name 'f_net' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="247">In member 'NeuralNetwork.sigmoid(float)', remove the underscores from parameter name 'f_net'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sigmoid_derivative(System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="derivative" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="252">Correct the casing of 'derivative' in member name 'NeuralNetwork.sigmoid_derivative(float)' by changing it to 'Derivative'.</Issue>
            </Message>
            <Message Id="sigmoid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="252">Correct the casing of 'sigmoid' in member name 'NeuralNetwork.sigmoid_derivative(float)' by changing it to 'Sigmoid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="252">Remove the underscores from member name 'NeuralNetwork.sigmoid_derivative(float)'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="252">The 'this' parameter (or 'Me' in Visual Basic) of 'NeuralNetwork.sigmoid_derivative(float)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#threshold(System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="threshold" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="257">Correct the casing of 'threshold' in member name 'NeuralNetwork.threshold(float)' by changing it to 'Threshold'.</Issue>
            </Message>
            <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="257">In method 'NeuralNetwork.threshold(float)', correct the spelling of 'val' in parameter name 'val' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="257">The 'this' parameter (or 'Me' in Visual Basic) of 'NeuralNetwork.threshold(float)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#train_network2(System.Windows.Forms.ProgressBar)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="199">Method 'NeuralNetwork.train_network2(ProgressBar)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "-".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="206">Method 'NeuralNetwork.train_network2(ProgressBar)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "-".</Issue>
            </Message>
            <Message Id="network" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="177">Correct the casing of 'network' in member name 'NeuralNetwork.train_network2(ProgressBar)' by changing it to 'Network'.</Issue>
            </Message>
            <Message Id="train" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="177">Correct the casing of 'train' in member name 'NeuralNetwork.train_network2(ProgressBar)' by changing it to 'Train'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="177">Remove the underscores from member name 'NeuralNetwork.train_network2(ProgressBar)'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="199">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.train_network2(ProgressBar)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="206">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.train_network2(ProgressBar)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="199">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.train_network2(ProgressBar)' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="206">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'NeuralNetwork.train_network2(ProgressBar)' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="199">Change 'NeuralNetwork.train_network2(ProgressBar)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="206">Change 'NeuralNetwork.train_network2(ProgressBar)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="NeuralNetwork.cs" Line="180">In externally visible method 'NeuralNetwork.train_network2(ProgressBar)', validate parameter 'progressBar1' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#trainer_string" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NeuralNetwork.trainer_string' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#weight" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'NeuralNetwork.weight' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="processImage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="process" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'process' in type name 'processImage' by changing it to 'Process'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'processImage' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AdjustContrast(System.Drawing.Bitmap,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="174">Consider changing the type of parameter 'Image' in 'processImage.AdjustContrast(Bitmap, float)' from 'Bitmap' to its base type 'Image'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="177">In method 'processImage.AdjustContrast(Bitmap, float)', object 'NewBitmap' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'NewBitmap' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="174">'processImage.AdjustContrast(Bitmap, float)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.AdjustContrast(Bitmap, float)'&#xD;&#xA;   -&gt;'processImage.AdjustContrast(Bitmap, float)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="174">'processImage.AdjustContrast(Bitmap, float)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.AdjustContrast(Bitmap, float)'&#xD;&#xA;   -&gt;'processImage.AdjustContrast(Bitmap, float)'</Issue>
            </Message>
            <Message Id="Image" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="174">In member 'processImage.AdjustContrast(Bitmap, float)', correct the casing of 'Image' in parameter name 'Image' by changing it to 'image'.</Issue>
            </Message>
            <Message Id="Value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="174">In member 'processImage.AdjustContrast(Bitmap, float)', correct the casing of 'Value' in parameter name 'Value' by changing it to 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Binarization(System.Drawing.Bitmap,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">'processImage.Binarization(Bitmap, int)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Binarization(Bitmap, int)'&#xD;&#xA;   -&gt;'processImage.Binarization(Bitmap, int)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">'processImage.Binarization(Bitmap, int)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Binarization(Bitmap, int)'&#xD;&#xA;   -&gt;'processImage.Binarization(Bitmap, int)'</Issue>
            </Message>
            <Message Id="Binarization" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">Correct the spelling of 'Binarization' in member name 'processImage.Binarization(Bitmap, int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Nguong" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">In method 'processImage.Binarization(Bitmap, int)', correct the spelling of 'Nguong' in parameter name 'nNguong' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">In method 'processImage.Binarization(Bitmap, int)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="228">In method 'processImage.Binarization(Bitmap, int)', correct the spelling of 'n' in parameter name 'nNguong' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="230">In externally visible method 'processImage.Binarization(Bitmap, int)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#computeSum(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="291">'processImage.computeSum(Bitmap)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.computeSum(Bitmap)'&#xD;&#xA;   -&gt;'processImage.computeSum(Bitmap)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="291">'processImage.computeSum(Bitmap)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.computeSum(Bitmap)'&#xD;&#xA;   -&gt;'processImage.computeSum(Bitmap)'</Issue>
            </Message>
            <Message Id="compute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="291">Correct the casing of 'compute' in member name 'processImage.computeSum(Bitmap)' by changing it to 'Compute'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="295">In externally visible method 'processImage.computeSum(Bitmap)', validate parameter 'bmp' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#convert01(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="convert" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="387">Correct the casing of 'convert' in member name 'processImage.convert01(int)' by changing it to 'Convert'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cut2Image(System.Drawing.Bitmap,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="356">In method 'processImage.cut2Image(Bitmap, int)', object 'output' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'output' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="355">'processImage.cut2Image(Bitmap, int)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.cut2Image(Bitmap, int)'&#xD;&#xA;   -&gt;'processImage.cut2Image(Bitmap, int)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="355">'processImage.cut2Image(Bitmap, int)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.cut2Image(Bitmap, int)'&#xD;&#xA;   -&gt;'processImage.cut2Image(Bitmap, int)'</Issue>
            </Message>
            <Message Id="cut" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="355">Correct the casing of 'cut' in member name 'processImage.cut2Image(Bitmap, int)' by changing it to 'Cut'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="356">In externally visible method 'processImage.cut2Image(Bitmap, int)', validate parameter 'image' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cut4Image(System.Drawing.Bitmap,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="320">In method 'processImage.cut4Image(Bitmap, int, int)', object 'output' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'output' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="318">'processImage.cut4Image(Bitmap, int, int)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.cut4Image(Bitmap, int, int)'&#xD;&#xA;   -&gt;'processImage.cut4Image(Bitmap, int, int)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="318">'processImage.cut4Image(Bitmap, int, int)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.cut4Image(Bitmap, int, int)'&#xD;&#xA;   -&gt;'processImage.cut4Image(Bitmap, int, int)'</Issue>
            </Message>
            <Message Id="cut" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="318">Correct the casing of 'cut' in member name 'processImage.cut4Image(Bitmap, int, int)' by changing it to 'Cut'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="318">In method 'processImage.cut4Image(Bitmap, int, int)', correct the spelling of 'h' in parameter name 'hStart' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="318">In method 'processImage.cut4Image(Bitmap, int, int)', correct the spelling of 'w' in parameter name 'wStart' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="wStart*4" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="329">Correct the potential overflow in the operation 'wStart*4' in 'processImage.cut4Image(Bitmap, int, int)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="320">In externally visible method 'processImage.cut4Image(Bitmap, int, int)', validate parameter 'image' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#charResize(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="28">Consider changing the type of parameter 'bmp' in 'processImage.charResize(Bitmap)' from 'Bitmap' to its base type 'Image'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="32">In method 'processImage.charResize(Bitmap)', call System.IDisposable.Dispose on object 'bm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="char" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="28">Correct the casing of 'char' in member name 'processImage.charResize(Bitmap)' by changing it to 'Char'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="30">In externally visible method 'processImage.charResize(Bitmap)', validate parameter 'bmp' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Displayplot(System.Int32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="395">In method 'processImage.Displayplot(int[])', object 'output' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'output' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="393">'processImage.Displayplot(int[])' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Displayplot(int[])'&#xD;&#xA;   -&gt;'processImage.Displayplot(int[])'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="393">'processImage.Displayplot(int[])' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Displayplot(int[])'&#xD;&#xA;   -&gt;'processImage.Displayplot(int[])'</Issue>
            </Message>
            <Message Id="F" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="393">In member 'processImage.Displayplot(int[])', correct the casing of 'F' in parameter name 'F' by changing it to 'f'.</Issue>
            </Message>
            <Message Id="Displayplot" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="393">Correct the spelling of 'Displayplot' in member name 'processImage.Displayplot(int[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="F" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="393">In method 'processImage.Displayplot(int[])', consider providing a more meaningful name than parameter name 'F'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="395">In externally visible method 'processImage.Displayplot(int[])', validate parameter 'F' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HaarFeature(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Haar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="255">Correct the spelling of 'Haar' in member name 'processImage.HaarFeature(Bitmap)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImgGetInput(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="446">Correct the spelling of 'Img' in member name 'processImage.ImgGetInput(Bitmap)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="446">In method 'processImage.ImgGetInput(Bitmap)', correct the spelling of 'Img' in parameter name 'charImg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Median_LockBits(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">Consider changing the type of parameter 'bm' in 'processImage.Median_LockBits(Bitmap)' from 'Bitmap' to its base type 'Image'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="139">In method 'processImage.Median_LockBits(Bitmap)', object 'bitmap' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bitmap' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">'processImage.Median_LockBits(Bitmap)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'&#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">'processImage.Median_LockBits(Bitmap)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'&#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">'processImage.Median_LockBits(Bitmap)' calls into 'Marshal.Copy(IntPtr, byte[], int, int)' which has a LinkDemand. By making this call, 'Marshal.Copy(IntPtr, byte[], int, int)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'&#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">'processImage.Median_LockBits(Bitmap)' calls into 'Marshal.Copy(byte[], int, IntPtr, int)' which has a LinkDemand. By making this call, 'Marshal.Copy(byte[], int, IntPtr, int)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'&#xD;&#xA;   -&gt;'processImage.Median_LockBits(Bitmap)'</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="137">Remove the underscores from member name 'processImage.Median_LockBits(Bitmap)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#plateResize(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="42">Consider changing the type of parameter 'bmp' in 'processImage.plateResize(Bitmap)' from 'Bitmap' to its base type 'Image'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="45">In method 'processImage.plateResize(Bitmap)', object 'bm' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'bm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="plate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="42">Correct the casing of 'plate' in member name 'processImage.plateResize(Bitmap)' by changing it to 'Plate'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="43">In externally visible method 'processImage.plateResize(Bitmap)', validate parameter 'bmp' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveImage(System.Windows.Forms.PictureBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="432">In method 'processImage.SaveImage(PictureBox)', call System.IDisposable.Dispose on object 'saveFileDialog1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="433">Method 'processImage.SaveImage(PictureBox)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "Bitmap Image|*.bmp".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Title(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="434">Method 'processImage.SaveImage(PictureBox)' passes a literal string as parameter 'value' of a call to 'FileDialog.Title.set(string)'. Retrieve the following string(s) from a resource table instead: "Save an Image File".</Issue>
            </Message>
            <Message Id="picbox" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="431">In method 'processImage.SaveImage(PictureBox)', correct the spelling of 'picbox' in parameter name 'picbox' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="GetExtension" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="440">'processImage.SaveImage(PictureBox)' declares a variable, 'GetExtension', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="438">Replace the call to 'string.Equals(string)' in 'processImage.SaveImage(PictureBox)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="441">In externally visible method 'processImage.SaveImage(PictureBox)', validate parameter 'picbox' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveImg(System.Windows.Forms.PictureBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="471">In method 'processImage.SaveImg(PictureBox)', call System.IDisposable.Dispose on object 'saveFileDialog1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Filter(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="472">Method 'processImage.SaveImg(PictureBox)' passes a literal string as parameter 'value' of a call to 'FileDialog.Filter.set(string)'. Retrieve the following string(s) from a resource table instead: "JPeg Image|*.jpg|Bitmap Image|*.bmp|Gif Image|*.gif".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.FileDialog.set_Title(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="473">Method 'processImage.SaveImg(PictureBox)' passes a literal string as parameter 'value' of a call to 'FileDialog.Title.set(string)'. Retrieve the following string(s) from a resource table instead: "Save an Image File".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Method 'processImage.SaveImg(PictureBox)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Không phải định dạng ảnh".</Issue>
            </Message>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="470">Correct the spelling of 'Img' in member name 'processImage.SaveImg(PictureBox)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Không" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Correct the spelling of the unrecognized token 'Không' in the literal '"Không phải định dạng ảnh"'.</Issue>
            </Message>
            <Message Id="dạng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Correct the spelling of the unrecognized token 'dạng' in the literal '"Không phải định dạng ảnh"'.</Issue>
            </Message>
            <Message Id="phải" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Correct the spelling of the unrecognized token 'phải' in the literal '"Không phải định dạng ảnh"'.</Issue>
            </Message>
            <Message Id="định" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Correct the spelling of the unrecognized token 'định' in the literal '"Không phải định dạng ảnh"'.</Issue>
            </Message>
            <Message Id="ảnh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Correct the spelling of the unrecognized token 'ảnh' in the literal '"Không phải định dạng ảnh"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="491">Change 'processImage.SaveImg(PictureBox)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="476">Replace the call to 'string.Equals(string)' in 'processImage.SaveImg(PictureBox)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="480">Replace the call to 'string.Equals(string)' in 'processImage.SaveImg(PictureBox)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="482">In externally visible method 'processImage.SaveImg(PictureBox)', validate parameter 'pictureBox1' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stdImg(System.Drawing.Bitmap)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="89">In method 'processImage.stdImg(Bitmap)', object 'image' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'image' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="87">'processImage.stdImg(Bitmap)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.stdImg(Bitmap)'&#xD;&#xA;   -&gt;'processImage.stdImg(Bitmap)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="87">'processImage.stdImg(Bitmap)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'processImage.stdImg(Bitmap)'&#xD;&#xA;   -&gt;'processImage.stdImg(Bitmap)'</Issue>
            </Message>
            <Message Id="std" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="87">Correct the casing of 'std' in member name 'processImage.stdImg(Bitmap)' by changing it to 'Std'.</Issue>
            </Message>
            <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="87">Correct the spelling of 'Img' in member name 'processImage.stdImg(Bitmap)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="processImage.cs" Line="92">In externally visible method 'processImage.stdImg(Bitmap)', validate parameter 'bm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RotateImg" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Img' in type name 'RotateImg'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RotateImg' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RotateImage(System.Drawing.Image,System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="RotateImg.cs" Line="55">In method 'RotateImg.RotateImage(Image, double)', object 'rotatedBmp' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rotatedBmp' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrainerForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#buttonX2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.cs" Line="77">Method 'TrainerForm.buttonX2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " Done!".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="65">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOAD FILE *.TXT".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="164">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "SAVE DATA".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="95">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Số lần lặp".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="77">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TRAIN".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="193">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "TRAINER FORM".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="111">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tốc độ học".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="133">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "chưa có dữ liệu".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="120">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "progress..".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="149">Method 'TrainerForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "∑ số mẫu".</Issue>
            </Message>
            <Message Id="Số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="95">Correct the spelling of the unrecognized token 'Số' in the literal '"Số lần lặp"'.</Issue>
            </Message>
            <Message Id="Tốc" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="111">Correct the spelling of the unrecognized token 'Tốc' in the literal '"Tốc độ học"'.</Issue>
            </Message>
            <Message Id="chưa" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="133">Correct the spelling of the unrecognized token 'chưa' in the literal '"chưa có dữ liệu"'.</Issue>
            </Message>
            <Message Id="có" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="133">Correct the spelling of the unrecognized token 'có' in the literal '"chưa có dữ liệu"'.</Issue>
            </Message>
            <Message Id="dữ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="133">Correct the spelling of the unrecognized token 'dữ' in the literal '"chưa có dữ liệu"'.</Issue>
            </Message>
            <Message Id="học" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="111">Correct the spelling of the unrecognized token 'học' in the literal '"Tốc độ học"'.</Issue>
            </Message>
            <Message Id="liệu" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="133">Correct the spelling of the unrecognized token 'liệu' in the literal '"chưa có dữ liệu"'.</Issue>
            </Message>
            <Message Id="lần" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="95">Correct the spelling of the unrecognized token 'lần' in the literal '"Số lần lặp"'.</Issue>
            </Message>
            <Message Id="lặp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="95">Correct the spelling of the unrecognized token 'lặp' in the literal '"Số lần lặp"'.</Issue>
            </Message>
            <Message Id="mẫu" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="149">Correct the spelling of the unrecognized token 'mẫu' in the literal '"∑ số mẫu"'.</Issue>
            </Message>
            <Message Id="số" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="149">Correct the spelling of the unrecognized token 'số' in the literal '"∑ số mẫu"'.</Issue>
            </Message>
            <Message Id="độ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\PROJECT\Project1\NDBS" File="TrainerForm.Designer.cs" Line="111">Correct the spelling of the unrecognized token 'độ' in the literal '"Tốc độ học"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-12-27 15:57:02Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TrainerForm.NN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
   <Name>Operations should not overflow</Name>
   <Description>Arithmetic operations should not be done without first validating the operands to prevent overflow.</Description>
   <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182354(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814">
   <Name>Prefer jagged arrays over multidimensional</Name>
   <Description>Multidimensional arrays can have a negative impact on performance. Use a jagged array if possible.</Description>
   <Resolution Name="Body">{0} uses a multidimensional array of {1}. Replace it with a jagged array if possible.</Resolution>
   <Resolution Name="Default">{0} is a multidimensional array. Replace it with a jagged array if possible.</Resolution>
   <Resolution Name="Return">{0} returns a multidimensional array of {1}. Replace it with a jagged array if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182277(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
